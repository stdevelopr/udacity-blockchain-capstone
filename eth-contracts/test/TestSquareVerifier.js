// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var SquareVerifier = artifacts.require('SquareVerifier');
const proofJson = require("../../zokrates/code/square/proof.json");

contract('TestSquareVerifier', accounts => {
  const owner = accounts[0];

  beforeEach(async() => {
      this.contract = await SquareVerifier.new({from: owner});
  });

  // Test verification with correct proof
  // - use the contents from proof.json generated from zokrates steps
  it("verify correct proof", async () => {
    result = await this.contract.verifyTx.call(proofJson.proof.a, proofJson.proof.b, proofJson.proof.c, proofJson.inputs);
    assert.equal(result, true)
  });
    
  // Test verification with incorrect proof
  it("should not verify incorrect proof", async() => {
    let result = await this.contract.verifyTx.call(proofJson.proof.a, proofJson.proof.b, proofJson.proof.c, [2, 3]);
    assert.equal(result, false);
  });
});




